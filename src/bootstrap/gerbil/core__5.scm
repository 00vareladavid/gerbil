(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core::<sugar>::<sugar:3>[:0:]#defsyntax|
    (lambda (_$stx12646_)
      (let ((_g1265112690_
             (lambda (_g1265212686_)
               (gx#raise-syntax-error '#f '"Bad syntax" _g1265212686_))))
        (let ((_g1265012746_
               (lambda (_g1265212694_)
                 (if (gx#stx-pair? _g1265212694_)
                     (let ((_e1267612697_ (gx#syntax-e _g1265212694_)))
                       (let ((_hd1267712701_ (##car _e1267612697_))
                             (_tl1267812704_ (##cdr _e1267612697_)))
                         (if (gx#stx-pair? _tl1267812704_)
                             (let ((_e1267912707_
                                    (gx#syntax-e _tl1267812704_)))
                               (let ((_hd1268012711_ (##car _e1267912707_))
                                     (_tl1268112714_ (##cdr _e1267912707_)))
                                 (if (gx#stx-pair? _tl1268112714_)
                                     (let ((_e1268212717_
                                            (gx#syntax-e _tl1268112714_)))
                                       (let ((_hd1268312721_
                                              (##car _e1268212717_))
                                             (_tl1268412724_
                                              (##cdr _e1268212717_)))
                                         (if (gx#stx-null? _tl1268412724_)
                                             ((lambda (_L12727_ _L12729_)
                                                (if (gx#identifier? _L12729_)
                                                    (cons (gx#datum->syntax
                                                           '#f
                                                           'define-syntax)
                                                          (cons _L12729_
                                                                (cons _L12727_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g1265112690_
                                                     _g1265212694_)))
                                              _hd1268312721_
                                              _hd1268012711_)
                                             (_g1265112690_ _g1265212694_))))
                                     (_g1265112690_ _g1265212694_))))
                             (_g1265112690_ _g1265212694_))))
                     (_g1265112690_ _g1265212694_)))))
          (let ((_g1264912844_
                 (lambda (_g1265212750_)
                   (if (gx#stx-pair? _g1265212750_)
                       (let ((_e1265612753_ (gx#syntax-e _g1265212750_)))
                         (let ((_hd1265712757_ (##car _e1265612753_))
                               (_tl1265812760_ (##cdr _e1265612753_)))
                           (if (gx#stx-pair? _tl1265812760_)
                               (let ((_e1265912763_
                                      (gx#syntax-e _tl1265812760_)))
                                 (let ((_hd1266012767_ (##car _e1265912763_))
                                       (_tl1266112770_ (##cdr _e1265912763_)))
                                   (if (gx#stx-pair? _hd1266012767_)
                                       (let ((_e1266212773_
                                              (gx#syntax-e _hd1266012767_)))
                                         (let ((_hd1266312777_
                                                (##car _e1266212773_))
                                               (_tl1266412780_
                                                (##cdr _e1266212773_)))
                                           (if (gx#stx-pair/null?
                                                _tl1266112770_)
                                               (if (fx>= (gx#stx-length
                                                          _tl1266112770_)
                                                         '0)
                                                   (let ((_g28376_
                                                          (gx#syntax-split-splice
                                                           _tl1266112770_
                                                           '0)))
                                                     (begin
                                                       (let ((_g28377_
                                                              (values-count
                                                               _g28376_)))
                                                         (if (not (fx= _g28377_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                               2))
                     (error "Context expects 2 values" _g28377_)))
               (let ((_target1266512783_ (values-ref _g28376_ 0))
                     (_tl1266712786_ (values-ref _g28376_ 1)))
                 (if (gx#stx-null? _tl1266712786_)
                     (letrec ((_loop1266812789_
                               (lambda (_hd1266612793_ _body1267212796_)
                                 (if (gx#stx-pair? _hd1266612793_)
                                     (let ((_e1266912799_
                                            (gx#syntax-e _hd1266612793_)))
                                       (let ((_lp-hd1267012803_
                                              (##car _e1266912799_))
                                             (_lp-tl1267112806_
                                              (##cdr _e1266912799_)))
                                         (_loop1266812789_
                                          _lp-tl1267112806_
                                          (cons _lp-hd1267012803_
                                                _body1267212796_))))
                                     (let ((_body1267312809_
                                            (reverse _body1267212796_)))
                                       ((lambda (_L12813_ _L12815_ _L12816_)
                                          (if (gx#identifier? _L12816_)
                                              (cons (gx#datum->syntax
                                                     '#f
                                                     'define-syntax)
                                                    (cons _L12816_
                                                          (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                               '#f
                               'lambda)
                              (cons _L12815_
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g1283512838_
                                                      _g1283612841_)
                                               (cons _g1283512838_
                                                     _g1283612841_))
                                             '()
                                             _L12813_))))
                        '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              (_g1265012746_ _g1265212750_)))
                                        _body1267312809_
                                        _tl1266412780_
                                        _hd1266312777_))))))
                       (_loop1266812789_ _target1266512783_ '()))
                     (_g1265012746_ _g1265212750_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g1265012746_
                                                    _g1265212750_))
                                               (_g1265012746_ _g1265212750_))))
                                       (_g1265012746_ _g1265212750_))))
                               (_g1265012746_ _g1265212750_))))
                       (_g1265012746_ _g1265212750_)))))
            (_g1264912844_ _$stx12646_)))))))
