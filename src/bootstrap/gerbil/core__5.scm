(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core::<sugar>::<sugar:3>[:0:]#defsyntax|
    (lambda (_$stx12643_)
      (let ((_g1264812687_
             (lambda (_g1264912683_)
               (gx#raise-syntax-error '#f '"Bad syntax" _g1264912683_))))
        (let ((_g1264712743_
               (lambda (_g1264912691_)
                 (if (gx#stx-pair? _g1264912691_)
                     (let ((_e1267312694_ (gx#syntax-e _g1264912691_)))
                       (let ((_hd1267412698_ (##car _e1267312694_))
                             (_tl1267512701_ (##cdr _e1267312694_)))
                         (if (gx#stx-pair? _tl1267512701_)
                             (let ((_e1267612704_
                                    (gx#syntax-e _tl1267512701_)))
                               (let ((_hd1267712708_ (##car _e1267612704_))
                                     (_tl1267812711_ (##cdr _e1267612704_)))
                                 (if (gx#stx-pair? _tl1267812711_)
                                     (let ((_e1267912714_
                                            (gx#syntax-e _tl1267812711_)))
                                       (let ((_hd1268012718_
                                              (##car _e1267912714_))
                                             (_tl1268112721_
                                              (##cdr _e1267912714_)))
                                         (if (gx#stx-null? _tl1268112721_)
                                             ((lambda (_L12724_ _L12726_)
                                                (if (gx#identifier? _L12726_)
                                                    (cons (gx#datum->syntax
                                                           '#f
                                                           'define-syntax)
                                                          (cons _L12726_
                                                                (cons _L12724_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g1264812687_
                                                     _g1264912691_)))
                                              _hd1268012718_
                                              _hd1267712708_)
                                             (_g1264812687_ _g1264912691_))))
                                     (_g1264812687_ _g1264912691_))))
                             (_g1264812687_ _g1264912691_))))
                     (_g1264812687_ _g1264912691_)))))
          (let ((_g1264612841_
                 (lambda (_g1264912747_)
                   (if (gx#stx-pair? _g1264912747_)
                       (let ((_e1265312750_ (gx#syntax-e _g1264912747_)))
                         (let ((_hd1265412754_ (##car _e1265312750_))
                               (_tl1265512757_ (##cdr _e1265312750_)))
                           (if (gx#stx-pair? _tl1265512757_)
                               (let ((_e1265612760_
                                      (gx#syntax-e _tl1265512757_)))
                                 (let ((_hd1265712764_ (##car _e1265612760_))
                                       (_tl1265812767_ (##cdr _e1265612760_)))
                                   (if (gx#stx-pair? _hd1265712764_)
                                       (let ((_e1265912770_
                                              (gx#syntax-e _hd1265712764_)))
                                         (let ((_hd1266012774_
                                                (##car _e1265912770_))
                                               (_tl1266112777_
                                                (##cdr _e1265912770_)))
                                           (if (gx#stx-pair/null?
                                                _tl1265812767_)
                                               (if (fx>= (gx#stx-length
                                                          _tl1265812767_)
                                                         '0)
                                                   (let ((_g28373_
                                                          (gx#syntax-split-splice
                                                           _tl1265812767_
                                                           '0)))
                                                     (begin
                                                       (let ((_g28374_
                                                              (values-count
                                                               _g28373_)))
                                                         (if (not (fx= _g28374_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                               2))
                     (error "Context expects 2 values" _g28374_)))
               (let ((_target1266212780_ (values-ref _g28373_ 0))
                     (_tl1266412783_ (values-ref _g28373_ 1)))
                 (if (gx#stx-null? _tl1266412783_)
                     (letrec ((_loop1266512786_
                               (lambda (_hd1266312790_ _body1266912793_)
                                 (if (gx#stx-pair? _hd1266312790_)
                                     (let ((_e1266612796_
                                            (gx#syntax-e _hd1266312790_)))
                                       (let ((_lp-hd1266712800_
                                              (##car _e1266612796_))
                                             (_lp-tl1266812803_
                                              (##cdr _e1266612796_)))
                                         (_loop1266512786_
                                          _lp-tl1266812803_
                                          (cons _lp-hd1266712800_
                                                _body1266912793_))))
                                     (let ((_body1267012806_
                                            (reverse _body1266912793_)))
                                       ((lambda (_L12810_ _L12812_ _L12813_)
                                          (if (gx#identifier? _L12813_)
                                              (cons (gx#datum->syntax
                                                     '#f
                                                     'define-syntax)
                                                    (cons _L12813_
                                                          (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                               '#f
                               'lambda)
                              (cons _L12812_
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g1283212835_
                                                      _g1283312838_)
                                               (cons _g1283212835_
                                                     _g1283312838_))
                                             '()
                                             _L12810_))))
                        '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              (_g1264712743_ _g1264912747_)))
                                        _body1267012806_
                                        _tl1266112777_
                                        _hd1266012774_))))))
                       (_loop1266512786_ _target1266212780_ '()))
                     (_g1264712743_ _g1264912747_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g1264712743_
                                                    _g1264912747_))
                                               (_g1264712743_ _g1264912747_))))
                                       (_g1264712743_ _g1264912747_))))
                               (_g1264712743_ _g1264912747_))))
                       (_g1264712743_ _g1264912747_)))))
            (_g1264612841_ _$stx12643_)))))))
