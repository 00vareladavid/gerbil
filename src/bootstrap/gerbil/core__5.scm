(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core::<sugar>::<sugar:3>[:0:]#defsyntax|
    (lambda (_$stx12606_)
      (let ((_g1261112650_
             (lambda (_g1261212646_)
               (gx#raise-syntax-error '#f '"Bad syntax" _g1261212646_))))
        (let ((_g1261012706_
               (lambda (_g1261212654_)
                 (if (gx#stx-pair? _g1261212654_)
                     (let ((_e1263612657_ (gx#syntax-e _g1261212654_)))
                       (let ((_hd1263712661_ (##car _e1263612657_))
                             (_tl1263812664_ (##cdr _e1263612657_)))
                         (if (gx#stx-pair? _tl1263812664_)
                             (let ((_e1263912667_
                                    (gx#syntax-e _tl1263812664_)))
                               (let ((_hd1264012671_ (##car _e1263912667_))
                                     (_tl1264112674_ (##cdr _e1263912667_)))
                                 (if (gx#stx-pair? _tl1264112674_)
                                     (let ((_e1264212677_
                                            (gx#syntax-e _tl1264112674_)))
                                       (let ((_hd1264312681_
                                              (##car _e1264212677_))
                                             (_tl1264412684_
                                              (##cdr _e1264212677_)))
                                         (if (gx#stx-null? _tl1264412684_)
                                             ((lambda (_L12687_ _L12689_)
                                                (if (gx#identifier? _L12689_)
                                                    (cons (gx#datum->syntax
                                                           '#f
                                                           'define-syntax)
                                                          (cons _L12689_
                                                                (cons _L12687_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g1261112650_
                                                     _g1261212654_)))
                                              _hd1264312681_
                                              _hd1264012671_)
                                             (_g1261112650_ _g1261212654_))))
                                     (_g1261112650_ _g1261212654_))))
                             (_g1261112650_ _g1261212654_))))
                     (_g1261112650_ _g1261212654_)))))
          (let ((_g1260912804_
                 (lambda (_g1261212710_)
                   (if (gx#stx-pair? _g1261212710_)
                       (let ((_e1261612713_ (gx#syntax-e _g1261212710_)))
                         (let ((_hd1261712717_ (##car _e1261612713_))
                               (_tl1261812720_ (##cdr _e1261612713_)))
                           (if (gx#stx-pair? _tl1261812720_)
                               (let ((_e1261912723_
                                      (gx#syntax-e _tl1261812720_)))
                                 (let ((_hd1262012727_ (##car _e1261912723_))
                                       (_tl1262112730_ (##cdr _e1261912723_)))
                                   (if (gx#stx-pair? _hd1262012727_)
                                       (let ((_e1262212733_
                                              (gx#syntax-e _hd1262012727_)))
                                         (let ((_hd1262312737_
                                                (##car _e1262212733_))
                                               (_tl1262412740_
                                                (##cdr _e1262212733_)))
                                           (if (gx#stx-pair/null?
                                                _tl1262112730_)
                                               (if (fx>= (gx#stx-length
                                                          _tl1262112730_)
                                                         '0)
                                                   (let ((_g28077_
                                                          (gx#syntax-split-splice
                                                           _tl1262112730_
                                                           '0)))
                                                     (begin
                                                       (let ((_g28078_
                                                              (values-count
                                                               _g28077_)))
                                                         (if (not (fx= _g28078_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                               2))
                     (error "Context expects 2 values" _g28078_)))
               (let ((_target1262512743_ (values-ref _g28077_ 0))
                     (_tl1262712746_ (values-ref _g28077_ 1)))
                 (if (gx#stx-null? _tl1262712746_)
                     (letrec ((_loop1262812749_
                               (lambda (_hd1262612753_ _body1263212756_)
                                 (if (gx#stx-pair? _hd1262612753_)
                                     (let ((_e1262912759_
                                            (gx#syntax-e _hd1262612753_)))
                                       (let ((_lp-hd1263012763_
                                              (##car _e1262912759_))
                                             (_lp-tl1263112766_
                                              (##cdr _e1262912759_)))
                                         (_loop1262812749_
                                          _lp-tl1263112766_
                                          (cons _lp-hd1263012763_
                                                _body1263212756_))))
                                     (let ((_body1263312769_
                                            (reverse _body1263212756_)))
                                       ((lambda (_L12773_ _L12775_ _L12776_)
                                          (if (gx#identifier? _L12776_)
                                              (cons (gx#datum->syntax
                                                     '#f
                                                     'define-syntax)
                                                    (cons _L12776_
                                                          (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                               '#f
                               'lambda)
                              (cons _L12775_
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g1279512798_
                                                      _g1279612801_)
                                               (cons _g1279512798_
                                                     _g1279612801_))
                                             '()
                                             _L12773_))))
                        '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              (_g1261012706_ _g1261212710_)))
                                        _body1263312769_
                                        _tl1262412740_
                                        _hd1262312737_))))))
                       (_loop1262812749_ _target1262512743_ '()))
                     (_g1261012706_ _g1261212710_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g1261012706_
                                                    _g1261212710_))
                                               (_g1261012706_ _g1261212710_))))
                                       (_g1261012706_ _g1261212710_))))
                               (_g1261012706_ _g1261212710_))))
                       (_g1261012706_ _g1261212710_)))))
            (_g1260912804_ _$stx12606_)))))))
